{"version":3,"sources":["images/Itsuki.gif","components/FormIndex.js","pages/IndexPage.js","components/FormAssignments.js","pages/AssignmentsPage.js","pages/DynamicPage.js","components/FormCounter.js","pages/CounterPage.js","components/FormGraph.js","pages/GraphPage.js","components/RootsOfEquations/Bisection.js","pages/RootsOfEquations/BisectionPage.js","components/RootsOfEquations/FalsePosition.js","pages/RootsOfEquations/FalsePositionPage.js","components/RootsOfEquations/OnePoint.js","pages/RootsOfEquations/OnePointPage.js","components/RootsOfEquations/NewtonRaphson.js","pages/RootsOfEquations/NewtonRaphsonPage.js","components/RootsOfEquations/Secant.js","pages/RootsOfEquations/SecantPage.js","components/LinearAlgebraicEquations/Cramer.js","pages/LinearAlgebraicEquations/CramerPage.js","pages/LinearAlgebraicEquationsPage.js","pages/InterpolationandExtrapolationPage.js","images/icon.png","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["FormHome","Container","className","src","Itsuki","alt","IndexPage","FormIndex","axios","require","default","FormAssignments","useState","username","password","data","setData","isShow","setShow","isSubmit","setSubmit","useEffect","console","log","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","value","Button","disabled","onClick","a","post","s","config","status","variant","toString","AssignmentsPage","DynamicPage","useParams","name","nickname","FormCounter","numconter","Cout","setCout","CounterPage","FormGraph","labels","datasets","label","fill","backgroundColor","borderColor","options","title","display","text","scales","yAxes","ticks","beginAtZero","GraphPage","Bisection","xl","xr","error","results","setResults","as","Row","column","sm","Col","plaintext","readOnly","defaultValue","parseFloat","span","offset","res","JSON","parse","request","response","Table","striped","bordered","hover","map","r","iteration","xm","er","BisectionPage","FalsePosition","x1","FalsePositionPage","Onepoint","x","xi","OnePointPage","OnePoint","NewtonRaphson","fx","diffx","NewtonRaphsonPage","x0","fx0","fx1","deltax","SecantPage","Secant","Cramer","CramerPage","LinearAlgebraicEquationsPage","InterpolationandExtrapolationPage","NavBar","Navbar","bg","expand","sticky","to","Brand","icon","width","height","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","Item","Link","Divider","inline","href","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f946ef6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Itsuki.4ffec2bc.gif\";","import { Container } from 'react-bootstrap'\r\nimport Itsuki from '../images/Itsuki.gif'\r\n\r\nconst FormHome = () => {\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light text-center\">\r\n                <h2>Itsuki is No.1 Waifu</h2>\r\n                <br />\r\n                <img src={Itsuki} alt=\"Itsuki\" className=\"rounded img-fluid\" />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormHome\r\n","import FormIndex from '../components/FormIndex'\r\nconst IndexPage = () => {\r\n    return (\r\n        <div>\r\n            <FormIndex />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndexPage\r\n","import { useState, useEffect } from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nconst axios = require('axios').default\r\n\r\nconst FormAssignments = () => {\r\n    const [data, setData] = useState({\r\n        username: '',\r\n        password: '',\r\n    })\r\n    const [isShow, setShow] = useState(false)\r\n    const [isSubmit, setSubmit] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log('Mount Component')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect : username Change')\r\n    }, [data.username, data.password])\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                <Form>\r\n                    <Form.Group controlId=\"Username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Username\"\r\n                            onChange={(e) => {\r\n                                setData({ ...data, username: e.target.value })\r\n                            }}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"Password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter Password\"\r\n                            onChange={(e) => {\r\n                                setData({ ...data, password: e.target.value })\r\n                            }}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button\r\n                        disabled={isSubmit}\r\n                        onClick={async () => {\r\n                            setSubmit(true)\r\n                            const s = await axios.post(\r\n                                'http://localhost:8080/api/v1/users/login',\r\n                                data\r\n                            )\r\n                            console.log(s.config.data)\r\n                            s.status === 200 && setSubmit(false)\r\n                        }}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n                <hr />\r\n                <Button\r\n                    variant=\"outline-secondary\"\r\n                    onClick={() => {\r\n                        setShow(!isShow)\r\n                    }}\r\n                >\r\n                    Click Me\r\n                </Button>\r\n                : {isShow.toString()}\r\n                <br />\r\n                {isShow && (\r\n                    <div>\r\n                        <h1>Username :</h1> {data.username}\r\n                        <br />\r\n                        <h1>Password :</h1> {data.password}\r\n                    </div>\r\n                )}\r\n                <br />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAssignments\r\n","import FormAssignments from '../components/FormAssignments'\r\nconst AssignmentsPage = () => {\r\n    return (\r\n        <div>\r\n            <FormAssignments />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignmentsPage\r\n","import { useParams } from 'react-router-dom'\r\n\r\nconst DynamicPage = () => {\r\n    const { name, nickname } = useParams()\r\n    return (\r\n        <div>\r\n            <h1>Name : {name}</h1>\r\n            <h1>Nickname : {nickname}</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default DynamicPage\r\n","import { useState, useEffect } from 'react'\r\nimport { Container, Button } from 'react-bootstrap'\r\n\r\nconst FormCounter = () => {\r\n    const [Cout, setCout] = useState({\r\n        numconter: 0,\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('Mount Component')\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                {Cout.numconter > 20 ? (\r\n                    <h1 className=\"text-danger\">{Cout.numconter}</h1>\r\n                ) : Cout.numconter < 0 ? (\r\n                    <h1 className=\"text-success\">{Cout.numconter}</h1>\r\n                ) : (\r\n                    <h1>{Cout.numconter}</h1>\r\n                )}\r\n                <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                        setCout({ ...Cout, numconter: Cout.numconter - 1 })\r\n                    }}\r\n                >\r\n                    YAMETE! Senpai(-)\r\n                </Button>\r\n                <Button\r\n                    variant=\"success\"\r\n                    className=\"ml-2\"\r\n                    onClick={() => {\r\n                        setCout({ ...Cout, numconter: Cout.numconter + 1 })\r\n                    }}\r\n                >\r\n                    Notice Me Senpai(+)\r\n                </Button>\r\n                <br />\r\n                <br />\r\n                <h2>Count &gt; 20 = Red</h2>\r\n                <h2>Count &lt; 0 = Green</h2>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormCounter\r\n","import FormCounter from '../components/FormCounter'\r\nconst CounterPage = () => {\r\n    return (\r\n        <div>\r\n            <FormCounter />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterPage\r\n","import { React } from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport { Line } from 'react-chartjs-2'\r\nconst FormGraph = () => {\r\n    const data = {\r\n        labels: ['Ichika', 'Nino', 'Miku', 'Yotsuba', 'Itsuki'],\r\n        datasets: [\r\n            {\r\n                label: '# of Waifu Point',\r\n                data: [10, 15, 18, 8, 20],\r\n                fill: false,\r\n                backgroundColor: 'rgb(255, 99, 132)',\r\n                borderColor: 'rgba(255, 99, 132, 0.2)',\r\n            },\r\n        ],\r\n    }\r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: 'Waifu Chart',\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    }\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                <h1>Graph</h1>\r\n                <p>This is a Graph</p>\r\n                <Form>\r\n                    <Form.Group controlId=\"WaifuName\">\r\n                        <Form.Label>Add Waifu</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Waiful Name\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"WaifulPoint\">\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"Enter Waiful Point\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add\r\n                    </Button>\r\n                </Form>\r\n                <Line data={data} options={options} />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormGraph\r\n","import FormGraph from '../components/FormGraph'\r\nconst GraphPage = () => {\r\n    return (\r\n        <div>\r\n            <FormGraph />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GraphPage\r\n","import { useState } from 'react'\r\nimport { Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nconst axios = require('axios').default\r\n\r\nconst Bisection = () => {\r\n    const [data, setData] = useState({\r\n        xl: 0,\r\n        xr: 0,\r\n        error: 0.00001,\r\n    })\r\n    const [results, setResults] = useState(null)\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                <h2>Bisection Method</h2>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"Equation\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Equation :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                plaintext\r\n                                readOnly\r\n                                defaultValue=\"(x^4)-13\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XL\">\r\n                        <Form.Label column sm=\"2\">\r\n                            XL :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"XL\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        xl: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XR\">\r\n                        <Form.Label column sm=\"2\">\r\n                            XR :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"XR\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        xr: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"Error\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Error :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Error\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        error: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={async () => {\r\n                                    const res = await axios.post(\r\n                                        'http://localhost:8080/api/v1/root/bisection',\r\n                                        data\r\n                                    )\r\n                                    console.log(res)\r\n                                    setResults(\r\n                                        JSON.parse(res.request.response).data\r\n                                    )\r\n                                }}\r\n                            >\r\n                                Calculate\r\n                            </Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {results !== null && (\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Iteration</th>\r\n                                    <th>XL</th>\r\n                                    <th>XR</th>\r\n                                    <th>XM</th>\r\n                                    <th>ER</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {results.map((r) => (\r\n                                    <tr key={r.iteration}>\r\n                                        <td>{r.iteration}</td>\r\n                                        <td>{r.xl}</td>\r\n                                        <td>{r.xr}</td>\r\n                                        <td>{r.xm}</td>\r\n                                        <td>{r.er}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bisection\r\n","import Bisection from '../../components/RootsOfEquations/Bisection'\r\nconst BisectionPage = () => {\r\n    return (\r\n        <div>\r\n            <Bisection />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BisectionPage\r\n","import { useState } from 'react'\r\nimport { Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nconst axios = require('axios').default\r\n\r\nconst FalsePosition = () => {\r\n    const [data, setData] = useState({\r\n        xl: 0,\r\n        xr: 0,\r\n        error: 0.00001,\r\n    })\r\n    const [results, setResults] = useState(null)\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                <h2>False-Position Method</h2>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"Equation\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Equation :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                plaintext\r\n                                readOnly\r\n                                defaultValue=\"(x^4)-13\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XL\">\r\n                        <Form.Label column sm=\"2\">\r\n                            XL :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"XL\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        xl: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XR\">\r\n                        <Form.Label column sm=\"2\">\r\n                            XR :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"XR\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        xr: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"Error\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Error :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Error\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        error: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={async () => {\r\n                                    const res = await axios.post(\r\n                                        'http://localhost:8080/api/v1/root/falseposition',\r\n                                        data\r\n                                    )\r\n                                    console.log(res)\r\n                                    setResults(\r\n                                        JSON.parse(res.request.response).data\r\n                                    )\r\n                                }}\r\n                            >\r\n                                Calculate\r\n                            </Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {results !== null && (\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Iteration</th>\r\n                                    <th>XL</th>\r\n                                    <th>XR</th>\r\n                                    <th>X1</th>\r\n                                    <th>ER</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {results.map((r) => (\r\n                                    <tr key={r.iteration}>\r\n                                        <td>{r.iteration}</td>\r\n                                        <td>{r.xl}</td>\r\n                                        <td>{r.xr}</td>\r\n                                        <td>{r.x1}</td>\r\n                                        <td>{r.er}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FalsePosition\r\n","import FalsePosition from '../../components/RootsOfEquations/FalsePosition'\r\nconst FalsePositionPage = () => {\r\n    return (\r\n        <div>\r\n            <FalsePosition />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FalsePositionPage\r\n","import { useState } from 'react'\r\nimport { Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nconst axios = require('axios').default\r\n\r\nconst Onepoint = () => {\r\n    const [data, setData] = useState({\r\n        x: 0,\r\n        error: 0.00001,\r\n    })\r\n    const [results, setResults] = useState(null)\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                <h2>One-Point Method</h2>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"Equation\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Equation :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                plaintext\r\n                                readOnly\r\n                                defaultValue=\"(x^4)-13\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XL\">\r\n                        <Form.Label column sm=\"2\">\r\n                            X Start :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"X Start\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        x: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"Error\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Error :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Error\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        error: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={async () => {\r\n                                    const res = await axios.post(\r\n                                        'http://localhost:8080/api/v1/root/onepoint',\r\n                                        data\r\n                                    )\r\n                                    console.log(res)\r\n                                    setResults(\r\n                                        JSON.parse(res.request.response).data\r\n                                    )\r\n                                }}\r\n                            >\r\n                                Calculate\r\n                            </Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {results !== null && (\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Iteration</th>\r\n                                    <th>X</th>\r\n                                    <th>Xi</th>\r\n                                    <th>ER</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {results.map((r) => (\r\n                                    <tr key={r.iteration}>\r\n                                        <td>{r.iteration}</td>\r\n                                        <td>{r.x}</td>\r\n                                        <td>{r.xi}</td>\r\n                                        <td>{r.er}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Onepoint\r\n","import OnePoint from '../../components/RootsOfEquations/OnePoint'\r\nconst OnePointPage = () => {\r\n    return (\r\n        <div>\r\n            <OnePoint />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OnePointPage\r\n","import { useState } from 'react'\r\nimport { Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nconst axios = require('axios').default\r\n\r\nconst NewtonRaphson = () => {\r\n    const [data, setData] = useState({\r\n        x: 0,\r\n        error: 0.00001,\r\n    })\r\n    const [results, setResults] = useState(null)\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                <h2>Newton-Raphson Method</h2>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"Equation\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Equation :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                plaintext\r\n                                readOnly\r\n                                defaultValue=\"(x^4)-13\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XL\">\r\n                        <Form.Label column sm=\"2\">\r\n                            X Start :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"X Start\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        x: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"Error\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Error :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Error\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        error: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={async () => {\r\n                                    const res = await axios.post(\r\n                                        'http://localhost:8080/api/v1/root/newtonraphson',\r\n                                        data\r\n                                    )\r\n                                    console.log(res)\r\n                                    setResults(\r\n                                        JSON.parse(res.request.response).data\r\n                                    )\r\n                                }}\r\n                            >\r\n                                Calculate\r\n                            </Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {results !== null && (\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Iteration</th>\r\n                                    <th>Xi</th>\r\n                                    <th>FX</th>\r\n                                    <th>diff(FX)</th>\r\n                                    <th>ER</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {results.map((r) => (\r\n                                    <tr key={r.iteration}>\r\n                                        <td>{r.iteration}</td>\r\n                                        <td>{r.xi}</td>\r\n                                        <td>{r.fx}</td>\r\n                                        <td>{r.diffx}</td>\r\n                                        <td>{r.er}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewtonRaphson\r\n","import NewtonRaphson from '../../components/RootsOfEquations/NewtonRaphson'\r\nconst NewtonRaphsonPage = () => {\r\n    return (\r\n        <div>\r\n            <NewtonRaphson />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewtonRaphsonPage\r\n","import { useState } from 'react'\r\nimport { Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nconst axios = require('axios').default\r\n\r\nconst Onepoint = () => {\r\n    const [data, setData] = useState({\r\n        x: 0,\r\n        error: 0.00001,\r\n    })\r\n    const [results, setResults] = useState(null)\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                <h2>Secant Method</h2>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"Equation\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Equation :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                plaintext\r\n                                readOnly\r\n                                defaultValue=\"(x^4)-13\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XL\">\r\n                        <Form.Label column sm=\"2\">\r\n                            X0 :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"X0\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        x0: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XL\">\r\n                        <Form.Label column sm=\"2\">\r\n                            X1 :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"X1\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        x1: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"Error\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Error :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Error\"\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        error: parseFloat(e.target.value),\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={async () => {\r\n                                    const res = await axios.post(\r\n                                        'http://localhost:8080/api/v1/root/secant',\r\n                                        data\r\n                                    )\r\n                                    console.log(res)\r\n                                    setResults(\r\n                                        JSON.parse(res.request.response).data\r\n                                    )\r\n                                }}\r\n                            >\r\n                                Calculate\r\n                            </Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {results !== null && (\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Iteration</th>\r\n                                    <th>X0</th>\r\n                                    <th>X1</th>\r\n                                    <th>FX0</th>\r\n                                    <th>FX1</th>\r\n                                    <th>DeltaX</th>\r\n                                    <th>Xi</th>\r\n                                    <th>ER</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {results.map((r) => (\r\n                                    <tr key={r.iteration}>\r\n                                        <td>{r.iteration}</td>\r\n                                        <td>{r.x0}</td>\r\n                                        <td>{r.x1}</td>\r\n                                        <td>{r.fx0}</td>\r\n                                        <td>{r.fx1}</td>\r\n                                        <td>{r.deltax}</td>\r\n                                        <td>{r.xi}</td>\r\n                                        <td>{r.er}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Onepoint\r\n","import Secant from '../../components/RootsOfEquations/Secant'\r\nconst SecantPage = () => {\r\n    return (\r\n        <div>\r\n            <Secant />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecantPage\r\n","import { useState, useEffect } from 'react'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\nconst Cramer = () => {\r\n    return (\r\n        <div>\r\n            <Container className=\"mt-5 p-4 rounded bg-light\">\r\n                <h2>Cramer's rule</h2>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"Equation\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Equation :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                plaintext\r\n                                readOnly\r\n                                defaultValue=\"(x^4)-13\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XL\">\r\n                        <Form.Label column sm=\"2\">\r\n                            XL :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"number\" placeholder=\"XL\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"XR\">\r\n                        <Form.Label column sm=\"2\">\r\n                            XR :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"number\" placeholder=\"XR\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"Error\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Error :\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Error(optional)\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Button type=\"submit\">Calculate</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cramer\r\n","import Cramer from '../../components/LinearAlgebraicEquations/Cramer'\r\nconst CramerPage = () => {\r\n    return (\r\n        <div>\r\n            <Cramer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CramerPage\r\n","import Bisection from '../components/RootsOfEquations/Bisection'\r\nimport FalsePosition from '../components/RootsOfEquations/FalsePosition'\r\nimport OnePoint from '../components/RootsOfEquations/OnePoint'\r\nimport NewtonRaphson from '../components/RootsOfEquations/NewtonRaphson'\r\nimport Secant from '../components/RootsOfEquations/Secant'\r\nconst LinearAlgebraicEquationsPage = () => {\r\n    return (\r\n        <div>\r\n            <Bisection />\r\n            <FalsePosition />\r\n            <OnePoint />\r\n            <NewtonRaphson />\r\n            <Secant />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinearAlgebraicEquationsPage\r\n","import Bisection from '../components/RootsOfEquations/Bisection'\r\nimport FalsePosition from '../components/RootsOfEquations/FalsePosition'\r\nimport OnePoint from '../components/RootsOfEquations/OnePoint'\r\nimport NewtonRaphson from '../components/RootsOfEquations/NewtonRaphson'\r\nimport Secant from '../components/RootsOfEquations/Secant'\r\nconst InterpolationandExtrapolationPage = () => {\r\n    return (\r\n        <div>\r\n            <Bisection />\r\n            <FalsePosition />\r\n            <OnePoint />\r\n            <NewtonRaphson />\r\n            <Secant />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InterpolationandExtrapolationPage\r\n","export default __webpack_public_path__ + \"static/media/icon.ff6bcf56.png\";","import { Nav, Navbar, NavDropdown, Form, Button } from 'react-bootstrap'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport icon from '../images/icon.png'\r\nconst NavBar = () => {\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n            <NavLink to=\"/\" className=\"nav-link\">\r\n                <Navbar.Brand>\r\n                    <img\r\n                        src={icon}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"React Bootstrap logo\"\r\n                    />\r\n                </Navbar.Brand>\r\n            </NavLink>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <NavDropdown\r\n                        title=\"Roots of Equations\"\r\n                        id=\"collasible-nav-dropdown\"\r\n                    >\r\n                        <NavDropdown.Item as={Link} to=\"/Bisection\">\r\n                            Bisection Method\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item as={Link} to=\"/FalsePosition\">\r\n                            False-Position Method\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item as={Link} to=\"/OnePoint\">\r\n                            One-Point Iteration Method\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item as={Link} to=\"/NewtonRaphson\">\r\n                            Newton-Raphson Method\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item as={Link} to=\"/Secant\">\r\n                            Secant Method\r\n                        </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    <NavDropdown\r\n                        title=\"Linear Algebraic Equations\"\r\n                        id=\"collasible-nav-dropdown\"\r\n                    >\r\n                        <NavDropdown.Item as={Link} to=\"/Cramer\">\r\n                            Cramer's rule\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/LinearAlgebraicEquationsPage\"\r\n                        >\r\n                            Gauss-Elimination Method\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/LinearAlgebraicEquationsPage\"\r\n                        >\r\n                            Gauss-Jordan Method\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/LinearAlgebraicEquationsPage\"\r\n                        >\r\n                            LU decomposition Method\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/LinearAlgebraicEquationsPage\"\r\n                        >\r\n                            Jacobi Iteration Method\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/LinearAlgebraicEquationsPage\"\r\n                        >\r\n                            Gauss-seidel\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/LinearAlgebraicEquationsPage\"\r\n                        >\r\n                            Conjugate Gradient Method\r\n                        </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    <NavDropdown\r\n                        title=\"Interpolation and Extrapolation\"\r\n                        id=\"collasible-nav-dropdown\"\r\n                    >\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/InterpolationandExtrapolationPage\"\r\n                        >\r\n                            Linear\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/InterpolationandExtrapolationPage\"\r\n                        >\r\n                            Quadratic\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            as={Link}\r\n                            to=\"/InterpolationandExtrapolationPage\"\r\n                        >\r\n                            Polynomial\r\n                        </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    <NavLink to=\"/assignments\" className=\"nav-link\">\r\n                        Assignments\r\n                    </NavLink>\r\n                    <NavLink to=\"/counter\" className=\"nav-link\">\r\n                        Counter(not Strike)\r\n                    </NavLink>\r\n                    <NavLink to=\"/graph\" className=\"nav-link\">\r\n                        Graph\r\n                    </NavLink>\r\n                </Nav>\r\n                <Form inline>\r\n                    <Button\r\n                        variant=\"outline-info\"\r\n                        href=\"https://github.com/TheBossTH/numerical-react\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        Github\r\n                    </Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default NavBar\r\n","import IndexPage from './pages/IndexPage'\r\nimport AssignmentsPage from './pages/AssignmentsPage'\r\nimport DynamicPage from './pages/DynamicPage'\r\nimport CounterPage from './pages/CounterPage'\r\nimport GraphPage from './pages/GraphPage'\r\nimport BisectionPage from './pages/RootsOfEquations/BisectionPage'\r\nimport FalsePositionPage from './pages/RootsOfEquations/FalsePositionPage'\r\nimport OnePointPage from './pages/RootsOfEquations/OnePointPage'\r\nimport NewtonRaphsonPage from './pages/RootsOfEquations/NewtonRaphsonPage.js'\r\nimport SecantPage from './pages/RootsOfEquations/SecantPage'\r\nimport CramerPage from './pages/LinearAlgebraicEquations/CramerPage'\r\nimport LinearAlgebraicEquationsPage from './pages/LinearAlgebraicEquationsPage'\r\nimport InterpolationandExtrapolationPage from './pages/InterpolationandExtrapolationPage'\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport NavBar from './components/NavBar'\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route exact path={'/'}>\r\n                    <IndexPage />\r\n                </Route>\r\n                <Route path={'/Bisection'}>\r\n                    <BisectionPage />\r\n                </Route>\r\n                <Route path={'/FalsePosition'}>\r\n                    <FalsePositionPage />\r\n                </Route>\r\n                <Route path={'/OnePoint'}>\r\n                    <OnePointPage />\r\n                </Route>\r\n                <Route path={'/NewtonRaphson'}>\r\n                    <NewtonRaphsonPage />\r\n                </Route>\r\n                <Route path={'/Secant'}>\r\n                    <SecantPage />\r\n                </Route>\r\n                <Route path={'/Cramer'}>\r\n                    <CramerPage />\r\n                </Route>\r\n                <Route path={'/LinearAlgebraicEquationsPage'}>\r\n                    <LinearAlgebraicEquationsPage />\r\n                </Route>\r\n                <Route path={'/InterpolationandExtrapolationPage'}>\r\n                    <InterpolationandExtrapolationPage />\r\n                </Route>\r\n                <Route path={'/assignments'}>\r\n                    <AssignmentsPage />\r\n                </Route>\r\n                <Route path={'/counter'}>\r\n                    <CounterPage />\r\n                </Route>\r\n                <Route path={'/graph'}>\r\n                    <GraphPage />\r\n                </Route>\r\n                <Route path={'/:name/:nickname'}>\r\n                    <DynamicPage />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}